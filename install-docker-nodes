# install-docker
- name: Install Docker on Defined Docker Hosts
  hosts: docker-hosts
  gather_facts: true
  any_errors_fatal: true
  become: yes
  tasks:
    - name: remove
      apt:
        name: "{{ p }}"
        state: absent
      vars:
        p:
          - docker-ce
          - docker-ce-cli

    - name: Update and upgrade hosts
      become: true
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 8640

    - name: Install prerequisites
      apt: name={{ item }} state=latest update_cache=yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg 
        - lsb-release
        
    - name: Add GPG Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add my Local Repository
      apt_repository:
        repo: "deb [arch=amd64]  http://10.0.10.103:8081/repository/apt-docker/ {{ ansible_distribution_release }} stable"
        state: present

    - name: Update and upgrade apt packages
      become: true
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 8640

    - name: Install Docker
      apt:
        name: "{{ packages_docker }}"
        state: present
      vars:
        packages_docker:
          - docker-ce
          - docker-ce-cli
          - containerd.io

    - name: Enable Docker Service
      service:
        name: docker
        enabled: true

    - name: Start Docker Service
      service:
        name: docker
        state: started

    - name: check if group "docker" exists with correct gid ( Extra step to make sure correctly installed )
      group:
        name: docker
        state: present

    - name: Hold docker engine upgrade with apt-mark
      command: apt-mark hold docker-ce docker-ce-cli docker

    - name: systemctl daemon reload
      become: yes
      shell: systemctl daemon-reload

    - name: Restart Docker Service
      service:
        name: docker
        state: restarted

    - name: Reboot and check conectivity
      reboot:
        msg: "Reboot command by Ansible Recived rebooting"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami
